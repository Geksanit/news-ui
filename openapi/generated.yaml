openapi: 3.0.1
info:
  title: Rest API Docs
  description: MetaNews is a news site
  version: 1.0.0
paths:
  /users/:
    get:
      tags:
        - Users
      summary: List all users (available only for admins)
      parameters:
        - in: query
          name: offset
          required: true
          schema:
            type: integer
            example: 0
          description: >-
            The number of items to skip before starting to collect the result
            set
        - in: query
          name: limit
          required: true
          schema:
            type: integer
            example: 5
          description: The numbers of items to return
      security:
        - cookieAuth: []
      responses:
        '200':
          description: A list of users.
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - type: object
                      properties:
                        username:
                          type: string
                        firstName:
                          type: string
                        lastName:
                          type: string
                        avatarUrl:
                          type: string
                      required:
                        - username
                        - firstName
                        - lastName
                        - avatarUrl
                    - type: object
                      properties:
                        id:
                          type: integer
                        isAdmin:
                          type: boolean
                      required:
                        - id
                        - isAdmin
        '401':
          description: Not authorized
        '500':
          description: Unexpected Error
    post:
      tags:
        - Users
      summary: Add a new user
      requestBody:
        description: User create request
        content:
          application/json:
            schema:
              allOf:
                - type: object
                  properties:
                    username:
                      type: string
                    firstName:
                      type: string
                    lastName:
                      type: string
                    avatarUrl:
                      type: string
                  required:
                    - username
                    - firstName
                    - lastName
                    - avatarUrl
                - type: object
                  properties:
                    password:
                      type: string
                  required:
                    - password
        required: true
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      username:
                        type: string
                      firstName:
                        type: string
                      lastName:
                        type: string
                      avatarUrl:
                        type: string
                    required:
                      - username
                      - firstName
                      - lastName
                      - avatarUrl
                  - type: object
                    properties:
                      id:
                        type: integer
                      isAdmin:
                        type: boolean
                    required:
                      - id
                      - isAdmin
        '400':
          description: Invalid request provided
        '500':
          description: Unexpected Error
    patch:
      tags:
        - Users
      summary: Update user (available only for admins)
      security:
        - cookieAuth: []
      requestBody:
        description: User update request
        content:
          application/json:
            schema:
              allOf:
                - type: object
                  properties:
                    username:
                      type: string
                    firstName:
                      type: string
                    lastName:
                      type: string
                    avatarUrl:
                      type: string
                  required:
                    - username
                    - firstName
                    - lastName
                    - avatarUrl
                - type: object
                  properties:
                    id:
                      type: integer
                    isAdmin:
                      type: boolean
                  required:
                    - id
                    - isAdmin
        required: true
      responses:
        '200':
          description: Successful operation
        '400':
          description: Invalid request provided
        '500':
          description: Unexpected Error
  '/users/{id}':
    delete:
      tags:
        - Users
      summary: Delete user (available only for admins)
      security:
        - cookieAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: User delete request
      responses:
        '200':
          description: Successful operation
        '400':
          description: Invalid request provided
        '500':
          description: Unexpected Error
  /users/me:
    get:
      tags:
        - Users
      summary: Get my user
      security:
        - cookieAuth: []
      responses:
        '200':
          description: get user
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      username:
                        type: string
                      firstName:
                        type: string
                      lastName:
                        type: string
                      avatarUrl:
                        type: string
                    required:
                      - username
                      - firstName
                      - lastName
                      - avatarUrl
                  - type: object
                    properties:
                      id:
                        type: integer
                      isAdmin:
                        type: boolean
                    required:
                      - id
                      - isAdmin
        '500':
          description: Unexpected Error
  /users/login/:
    post:
      tags:
        - Users
      summary: authoriztion
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: userLogin
                password:
                  type: string
                  example: 123
              required:
                - username
                - password
        required: true
      responses:
        '200':
          description: Authorized
          headers:
            Set-Cookie:
              schema:
                type: string
                example: JWT=abcde12345; Path=/; HttpOnly
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      username:
                        type: string
                      firstName:
                        type: string
                      lastName:
                        type: string
                      avatarUrl:
                        type: string
                    required:
                      - username
                      - firstName
                      - lastName
                      - avatarUrl
                  - type: object
                    properties:
                      id:
                        type: integer
                      isAdmin:
                        type: boolean
                    required:
                      - id
                      - isAdmin
        '400':
          description: Invalid request provided
        '500':
          description: Unexpected Error
  /authors/:
    get:
      tags:
        - Authors
      summary: List all available authors (available only for admins)
      security:
        - cookieAuth: []
      parameters:
        - in: query
          name: offset
          required: true
          schema:
            type: integer
            example: 0
          description: >-
            The number of items to skip before starting to collect the result
            set
        - in: query
          name: limit
          required: true
          schema:
            type: integer
            example: 5
          description: The numbers of items to return
      responses:
        '200':
          description: A list of authors.
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - type: object
                      properties:
                        userId:
                          type: integer
                        description:
                          type: string
                      required:
                        - userId
                        - description
                    - type: object
                      properties:
                        id:
                          type: integer
                      required:
                        - id
        '500':
          description: Unexpected Error
    post:
      tags:
        - Authors
      summary: Add a new author (available only for admins)
      security:
        - cookieAuth: []
      requestBody:
        description: Author create request
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                description:
                  type: string
              required:
                - userId
                - description
        required: true
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      userId:
                        type: integer
                      description:
                        type: string
                    required:
                      - userId
                      - description
                  - type: object
                    properties:
                      id:
                        type: integer
                    required:
                      - id
        '400':
          description: Invalid request provided
        '500':
          description: Unexpected Error
    put:
      tags:
        - Authors
      summary: Update author (available only for admins)
      security:
        - cookieAuth: []
      requestBody:
        description: Author update request
        content:
          application/json:
            schema:
              allOf:
                - type: object
                  properties:
                    userId:
                      type: integer
                    description:
                      type: string
                  required:
                    - userId
                    - description
                - type: object
                  properties:
                    id:
                      type: integer
                  required:
                    - id
        required: true
      responses:
        '200':
          description: Successful operation
        '400':
          description: Invalid request provided
        '500':
          description: Unexpected Error
  '/authors/{id}':
    get:
      tags:
        - Authors
      summary: Get author (available only for admins)
      security:
        - cookieAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: get author by id
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      userId:
                        type: integer
                      description:
                        type: string
                    required:
                      - userId
                      - description
                  - type: object
                    properties:
                      id:
                        type: integer
                    required:
                      - id
        '500':
          description: Unexpected Error
    delete:
      tags:
        - Authors
      summary: Delete author (available only for admins)
      security:
        - cookieAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: Author delete request
      responses:
        '200':
          description: Successful operation
        '400':
          description: Invalid request provided
        '500':
          description: Unexpected Error
  /posts/raw/:
    get:
      tags:
        - News
      summary: All available news (available only for admins)
      security:
        - cookieAuth: []
      parameters:
        - in: query
          name: offset
          required: true
          schema:
            type: integer
            example: 0
          description: >-
            The number of items to skip before starting to collect the result
            set
        - in: query
          name: limit
          required: true
          schema:
            type: integer
            example: 5
          description: The numbers of items to return
      responses:
        '200':
          description: A list of news.
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - type: object
                      properties:
                        title:
                          type: string
                        categoryId:
                          type: number
                        content:
                          type: string
                        topPhotoLink:
                          type: string
                        photoLinks:
                          type: array
                          uniqueItems: true
                          minItems: 0
                          maxItems: 10
                          items:
                            type: string
                        tagIds:
                          type: array
                          uniqueItems: true
                          minItems: 1
                          maxItems: 10
                          items:
                            type: number
                      required:
                        - title
                        - categoryId
                        - tagsIds
                        - content
                        - topPhotoLink
                        - photoLinks
                    - type: object
                      properties:
                        id:
                          type: integer
                        createdAt:
                          type: string
                          format: date
                          description: Creation date
                          example: '2021-01-30'
                        authorId:
                          type: number
                      required:
                        - id
                        - createdAt
                        - authorId
  /posts/:
    get:
      tags:
        - News
      summary: All available news
      parameters:
        - in: query
          name: categoryId
          required: false
          schema:
            type: number
        - in: query
          name: authorName
          required: false
          schema:
            type: string
        - in: query
          name: title
          required: false
          schema:
            type: string
        - in: query
          name: content
          required: false
          schema:
            type: string
        - in: query
          name: tag
          required: false
          schema:
            type: number
        - in: query
          name: tags__in
          required: false
          schema:
            type: array
            items:
              type: number
        - in: query
          name: tags__all
          required: false
          schema:
            type: array
            items:
              type: number
        - in: query
          name: created_at
          required: false
          schema:
            type: string
            format: date
        - in: query
          name: created_at__lt
          required: false
          schema:
            type: string
            format: date
        - in: query
          name: created_at__gt
          required: false
          schema:
            type: string
            format: date
        - in: query
          name: searchText
          required: false
          schema:
            type: string
        - in: query
          name: by
          required: false
          schema:
            type: string
            enum:
              - date
              - author
              - category
              - photoCount
        - in: query
          name: direction
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        - in: query
          name: limit
          required: true
          schema:
            type: integer
            example: 5
          description: The numbers of items to return
        - in: query
          name: offset
          required: true
          schema:
            type: integer
            example: 0
          description: >-
            The number of items to skip before starting to collect the result
            set
      responses:
        '200':
          description: A list of news.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    title:
                      type: string
                    createdAt:
                      type: string
                      format: date
                      description: Creation date
                      example: '2021-01-30'
                    author:
                      allOf:
                        - allOf:
                            - type: object
                              properties:
                                username:
                                  type: string
                                firstName:
                                  type: string
                                lastName:
                                  type: string
                                avatarUrl:
                                  type: string
                              required:
                                - username
                                - firstName
                                - lastName
                                - avatarUrl
                            - type: object
                              properties:
                                id:
                                  type: integer
                                isAdmin:
                                  type: boolean
                              required:
                                - id
                                - isAdmin
                        - type: object
                          properties:
                            description:
                              type: string
                          required:
                            - description
                    category:
                      type: array
                      uniqueItems: true
                      minItems: 1
                      maxItems: 10
                      items:
                        allOf:
                          - type: object
                            properties:
                              parentCategoryId:
                                nullable: true
                                type: integer
                              label:
                                type: string
                            required:
                              - label
                              - parentCategoryId
                          - type: object
                            properties:
                              id:
                                type: integer
                            required:
                              - id
                    tags:
                      type: array
                      uniqueItems: true
                      minItems: 1
                      maxItems: 10
                      items:
                        allOf:
                          - type: object
                            properties:
                              label:
                                type: string
                            required:
                              - label
                          - type: object
                            properties:
                              id:
                                type: integer
                            required:
                              - id
                    content:
                      type: string
                    topPhotoLink:
                      type: string
                    photoLinks:
                      type: array
                      uniqueItems: true
                      minItems: 0
                      maxItems: 10
                      items:
                        type: string
                  required:
                    - id
                    - title
                    - createdAt
                    - author
                    - category
                    - tags
                    - content
                    - topPhotoLink
                    - photoLinks
  '/posts/{id}':
    get:
      tags:
        - News
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            example: 1
          description: Numeric ID of the news to get
      responses:
        '200':
          description: One post.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  createdAt:
                    type: string
                    format: date
                    description: Creation date
                    example: '2021-01-30'
                  author:
                    allOf:
                      - allOf:
                          - type: object
                            properties:
                              username:
                                type: string
                              firstName:
                                type: string
                              lastName:
                                type: string
                              avatarUrl:
                                type: string
                            required:
                              - username
                              - firstName
                              - lastName
                              - avatarUrl
                          - type: object
                            properties:
                              id:
                                type: integer
                              isAdmin:
                                type: boolean
                            required:
                              - id
                              - isAdmin
                      - type: object
                        properties:
                          description:
                            type: string
                        required:
                          - description
                  category:
                    type: array
                    uniqueItems: true
                    minItems: 1
                    maxItems: 10
                    items:
                      allOf:
                        - type: object
                          properties:
                            parentCategoryId:
                              nullable: true
                              type: integer
                            label:
                              type: string
                          required:
                            - label
                            - parentCategoryId
                        - type: object
                          properties:
                            id:
                              type: integer
                          required:
                            - id
                  tags:
                    type: array
                    uniqueItems: true
                    minItems: 1
                    maxItems: 10
                    items:
                      allOf:
                        - type: object
                          properties:
                            label:
                              type: string
                          required:
                            - label
                        - type: object
                          properties:
                            id:
                              type: integer
                          required:
                            - id
                  content:
                    type: string
                  topPhotoLink:
                    type: string
                  photoLinks:
                    type: array
                    uniqueItems: true
                    minItems: 0
                    maxItems: 10
                    items:
                      type: string
                required:
                  - id
                  - title
                  - createdAt
                  - author
                  - category
                  - tags
                  - content
                  - topPhotoLink
                  - photoLinks
  /posts/drafts/:
    get:
      tags:
        - News
      summary: my drafts
      security:
        - cookieAuth: []
      parameters:
        - in: query
          name: offset
          required: true
          schema:
            type: integer
            example: 0
          description: >-
            The number of items to skip before starting to collect the result
            set
        - in: query
          name: limit
          required: true
          schema:
            type: integer
            example: 5
          description: The numbers of items to return
      responses:
        '200':
          description: A list of news.
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - type: object
                      properties:
                        title:
                          type: string
                        categoryId:
                          type: number
                        content:
                          type: string
                        topPhotoLink:
                          type: string
                        photoLinks:
                          type: array
                          uniqueItems: true
                          minItems: 0
                          maxItems: 10
                          items:
                            type: string
                        tagIds:
                          type: array
                          uniqueItems: true
                          minItems: 1
                          maxItems: 10
                          items:
                            type: number
                      required:
                        - title
                        - categoryId
                        - tagsIds
                        - content
                        - topPhotoLink
                        - photoLinks
                    - type: object
                      properties:
                        id:
                          type: integer
                        createdAt:
                          type: string
                          format: date
                          description: Creation date
                          example: '2021-01-30'
                        authorId:
                          type: number
                      required:
                        - id
                        - createdAt
                        - authorId
    post:
      tags:
        - News
      summary: Add a new News
      security:
        - cookieAuth: []
      requestBody:
        description: News create request
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                categoryId:
                  type: number
                content:
                  type: string
                topPhotoLink:
                  type: string
                photoLinks:
                  type: array
                  uniqueItems: true
                  minItems: 0
                  maxItems: 10
                  items:
                    type: string
                tagIds:
                  type: array
                  uniqueItems: true
                  minItems: 1
                  maxItems: 10
                  items:
                    type: number
              required:
                - title
                - categoryId
                - tagsIds
                - content
                - topPhotoLink
                - photoLinks
        required: true
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      title:
                        type: string
                      categoryId:
                        type: number
                      content:
                        type: string
                      topPhotoLink:
                        type: string
                      photoLinks:
                        type: array
                        uniqueItems: true
                        minItems: 0
                        maxItems: 10
                        items:
                          type: string
                      tagIds:
                        type: array
                        uniqueItems: true
                        minItems: 1
                        maxItems: 10
                        items:
                          type: number
                    required:
                      - title
                      - categoryId
                      - tagsIds
                      - content
                      - topPhotoLink
                      - photoLinks
                  - type: object
                    properties:
                      id:
                        type: integer
                      createdAt:
                        type: string
                        format: date
                        description: Creation date
                        example: '2021-01-30'
                      authorId:
                        type: number
                    required:
                      - id
                      - createdAt
                      - authorId
    patch:
      tags:
        - News
      summary: Update News
      security:
        - cookieAuth: []
      requestBody:
        description: News update request
        content:
          application/json:
            schema:
              allOf:
                - type: object
                  properties:
                    title:
                      type: string
                    categoryId:
                      type: number
                    content:
                      type: string
                    topPhotoLink:
                      type: string
                    photoLinks:
                      type: array
                      uniqueItems: true
                      minItems: 0
                      maxItems: 10
                      items:
                        type: string
                    tagIds:
                      type: array
                      uniqueItems: true
                      minItems: 1
                      maxItems: 10
                      items:
                        type: number
                  required:
                    - title
                    - categoryId
                    - tagsIds
                    - content
                    - topPhotoLink
                    - photoLinks
                - type: object
                  properties:
                    id:
                      type: integer
                    createdAt:
                      type: string
                      format: date
                      description: Creation date
                      example: '2021-01-30'
                    authorId:
                      type: number
                  required:
                    - id
                    - createdAt
                    - authorId
        required: true
      responses:
        '200':
          description: Successful operation
  '/posts/drafts/{id}':
    delete:
      security:
        - cookieAuth: []
      tags:
        - News
      summary: Delete News (available only for admins)
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: News delete request
      responses:
        '200':
          description: Successful operation
  '/posts/drafts/publish/{id}':
    get:
      security:
        - cookieAuth: []
      tags:
        - News
      summary: publish News (available only for author)
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: News publish request
      responses:
        '200':
          description: Successful operation
  /comments/:
    get:
      tags:
        - Comments
      summary: All available comments (available only for admins)
      security:
        - cookieAuth: []
      parameters:
        - in: query
          name: offset
          required: true
          schema:
            type: integer
            example: 0
          description: >-
            The number of items to skip before starting to collect the result
            set
        - in: query
          name: limit
          required: true
          schema:
            type: integer
            example: 5
          description: The numbers of items to return
      responses:
        '200':
          description: A list of comments.
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - type: object
                      properties:
                        newsId:
                          type: number
                        content:
                          type: string
                      required:
                        - newsId
                        - content
                    - type: object
                      properties:
                        id:
                          type: integer
                        userId:
                          type: number
                        createdAt:
                          type: string
                          format: date
                          description: Creation date
                          example: '2021-01-30'
                      required:
                        - id
                        - userId
                        - createdAt
        '500':
          description: Unexpected Error
    post:
      tags:
        - Comments
      summary: Add a new Comment
      security:
        - cookieAuth: []
      requestBody:
        description: Comment create request
        content:
          application/json:
            schema:
              type: object
              properties:
                newsId:
                  type: number
                content:
                  type: string
              required:
                - newsId
                - content
        required: true
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      newsId:
                        type: number
                      content:
                        type: string
                    required:
                      - newsId
                      - content
                  - type: object
                    properties:
                      id:
                        type: integer
                      userId:
                        type: number
                      createdAt:
                        type: string
                        format: date
                        description: Creation date
                        example: '2021-01-30'
                    required:
                      - id
                      - userId
                      - createdAt
        '400':
          description: Invalid request provided
        '500':
          description: Unexpected Error
    patch:
      tags:
        - Comments
      summary: Update Comment
      security:
        - cookieAuth: []
      requestBody:
        description: Comment update request
        content:
          application/json:
            schema:
              allOf:
                - type: object
                  properties:
                    newsId:
                      type: number
                    content:
                      type: string
                  required:
                    - newsId
                    - content
                - type: object
                  properties:
                    id:
                      type: integer
                    userId:
                      type: number
                    createdAt:
                      type: string
                      format: date
                      description: Creation date
                      example: '2021-01-30'
                  required:
                    - id
                    - userId
                    - createdAt
        required: true
      responses:
        '200':
          description: Successful operation
        '400':
          description: Invalid request provided
        '500':
          description: Unexpected Error
  '/comments/{id}':
    delete:
      security:
        - cookieAuth: []
      tags:
        - Comments
      summary: Delete Comment
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: Comment delete request
      responses:
        '200':
          description: Successful operation
        '400':
          description: Invalid request provided
        '500':
          description: Unexpected Error
  /categories/:
    get:
      tags:
        - Category
      summary: All available categories
      parameters:
        - in: query
          name: offset
          required: true
          schema:
            type: integer
            example: 0
          description: >-
            The number of items to skip before starting to collect the result
            set
        - in: query
          name: limit
          required: true
          schema:
            type: integer
            example: 5
          description: The numbers of items to return
      responses:
        '200':
          description: A list of categories.
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - type: object
                      properties:
                        parentCategoryId:
                          nullable: true
                          type: integer
                        label:
                          type: string
                      required:
                        - label
                        - parentCategoryId
                    - type: object
                      properties:
                        id:
                          type: integer
                      required:
                        - id
        '500':
          description: Unexpected Error
    post:
      tags:
        - Category
      summary: Add a new category (available only for admins)
      security:
        - cookieAuth: []
      requestBody:
        description: Category create request
        content:
          application/json:
            schema:
              type: object
              properties:
                parentCategoryId:
                  nullable: true
                  type: integer
                label:
                  type: string
              required:
                - label
                - parentCategoryId
        required: true
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      parentCategoryId:
                        nullable: true
                        type: integer
                      label:
                        type: string
                    required:
                      - label
                      - parentCategoryId
                  - type: object
                    properties:
                      id:
                        type: integer
                    required:
                      - id
        '400':
          description: Invalid request provided
        '500':
          description: Unexpected Error
    patch:
      tags:
        - Category
      summary: Update category (available only for admins)
      security:
        - cookieAuth: []
      requestBody:
        description: Category update request
        content:
          application/json:
            schema:
              allOf:
                - type: object
                  properties:
                    parentCategoryId:
                      nullable: true
                      type: integer
                    label:
                      type: string
                  required:
                    - label
                    - parentCategoryId
                - type: object
                  properties:
                    id:
                      type: integer
                  required:
                    - id
        required: true
      responses:
        '200':
          description: Successful operation
        '400':
          description: Invalid request provided
        '500':
          description: Unexpected Error
  '/categories/{id}':
    delete:
      security:
        - cookieAuth: []
      tags:
        - Category
      summary: Delete category (available only for admins)
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: Category delete request
      responses:
        '200':
          description: Successful operation
        '400':
          description: Invalid request provided
        '500':
          description: Unexpected Error
  /tags/:
    get:
      tags:
        - Tags
      summary: All available tags
      parameters:
        - in: query
          name: offset
          required: true
          schema:
            type: integer
            example: 0
          description: >-
            The number of items to skip before starting to collect the result
            set
        - in: query
          name: limit
          required: true
          schema:
            type: integer
            example: 5
          description: The numbers of items to return
      responses:
        '200':
          description: A list of tags.
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - type: object
                      properties:
                        label:
                          type: string
                      required:
                        - label
                    - type: object
                      properties:
                        id:
                          type: integer
                      required:
                        - id
        '500':
          description: Unexpected Error
    post:
      tags:
        - Tags
      summary: Add a new Tag (available only for admins)
      security:
        - cookieAuth: []
      requestBody:
        description: Tag create request
        content:
          application/json:
            schema:
              type: object
              properties:
                label:
                  type: string
              required:
                - label
        required: true
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      label:
                        type: string
                    required:
                      - label
                  - type: object
                    properties:
                      id:
                        type: integer
                    required:
                      - id
        '400':
          description: Invalid request provided
        '500':
          description: Unexpected Error
    patch:
      tags:
        - Tags
      summary: Update Tag (available only for admins)
      security:
        - cookieAuth: []
      requestBody:
        description: Tag update request
        content:
          application/json:
            schema:
              allOf:
                - type: object
                  properties:
                    label:
                      type: string
                  required:
                    - label
                - type: object
                  properties:
                    id:
                      type: integer
                  required:
                    - id
        required: true
      responses:
        '200':
          description: Successful operation
        '400':
          description: Invalid request provided
        '500':
          description: Unexpected Error
  '/tags/{id}':
    delete:
      security:
        - cookieAuth: []
      tags:
        - Tags
      summary: Delete Tag (available only for admins)
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: Tag delete request
      responses:
        '200':
          description: Successful operation
        '400':
          description: Invalid request provided
        '500':
          description: Unexpected Error
components:
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: jwt
